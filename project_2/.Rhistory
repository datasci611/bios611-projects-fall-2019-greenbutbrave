corr1 = function(outlier) {
if (outlier == 0) {
ggpairs(data_, progress = FALSE)
}
else if (outlier == 1) {
ggpairs(data6_, progress = FALSE)
}
}
source("helper_functions.R")
# Define UI for app that draws a histogram ----
ui = dashboardPage(
# Title
dashboardHeader(title = "UMA Data Visualization Dashboard",
titleWidth = 270
),
# Sidebar
dashboardSidebar(
sidebarMenu(
menuItem("Introduction", tabName = "Introduction", icon = icon("home")),
menuSubItem("RQ 1", tabName = "RQ_1", icon = icon("star")),
menuSubItem("RQ 2", tabName = "RQ_2", icon = icon("star")),
menuSubItem("RQ 3", tabName = "RQ_3", icon = icon("star")),
menuSubItem("RQ 4", tabName = "RQ_4", icon = icon("star"))
)
),
## Body
dashboardBody(
tabItems(
# Introduction Tab
tabItem(tabName = "Introduction",
h2("Introduction"),
textOutput("Introduction")
),
# Data Analysis RQ 1 Tab
tabItem(tabName = "RQ_1",
h2("RQ 1: "),
fluidRow(
radioButtons("RQ1_Outlier", label = "Do you want to remove Outliers?",
choices = list("No" = 0, "Yes" = 1),
selected = 0)
),
mainPanel(
plotOutput(outputId = "RQ1"),
helpText("Based on the rosner tests, the rows containing the outliers were removed so that I could notice that those pesky outliers are gone.")
)
),
# Data Analysis RQ 2 Tab
tabItem(tabName = "RQ_2",
h2("RQ 2: "),
fluidRow(
selectInput("RQ2_Selection", label = "Select a variable",
choices = list("Food" = 1,
"Food.Pounds" = 2, "Clothing" = 3,
"Diapers" = 4,
"Hygiene.Kits" = 5), selected = 1)
),
mainPanel(
plotOutput(outputId = "RQ2")
)
),
# Data Analysis RQ 3 Tab
tabItem(tabName = "RQ_3",
h2("RQ 3: "),
fluidRow(
selectInput("RQ3_Selection", label = "Select a variable",
choices = list("Food" = 1,
"Food.Pounds" = 2, "Clothing" = 3,
"Diapers" = 4,
"Hygiene.Kits" = 5), selected = 1)
),
mainPanel(
plotOutput(outputId = "RQ3")
)
),
# Data Analysis RQ 4 Tab
tabItem(tabName = "RQ_4",
h2("RQ 4: "),
fluidRow(
radioButtons("RQ4_Outlier", label = "Do you want to remove Outliers?",
choices = list("No" = 0, "Yes" = 1),
selected = 0)
),
mainPanel(
plotOutput(outputId = "RQ4")
)
)
)
)
)
server = function(input, output) {
# Introduction
output$Introduction <- renderText({
paste(Int1)
})
# Data Analysis - RQ 1
output$RQ1 <- renderPlot({
boxplot1(input$RQ1_Outlier)
})
# Data Analysis - RQ 2
output$RQ2 <- renderPlot({
season2(input$RQ2_Selection)
})
# Data Analysis - RQ 3
output$RQ3 <- renderPlot({
season1(input$RQ3_Selection)
})
# Data Analysis - RQ 4
output$RQ4 <- renderPlot({
corr1(input$RQ4_Outlier)
})
}
shinyApp(ui = ui, server = server)
source("helper_functions.R")
# Define UI for app that draws a histogram ----
ui = dashboardPage(
# Title
dashboardHeader(title = "UMA Data Visualization Dashboard",
titleWidth = 270
),
# Sidebar
dashboardSidebar(
sidebarMenu(
menuItem("Introduction", tabName = "Introduction", icon = icon("home")),
menuSubItem("RQ 1", tabName = "RQ_1", icon = icon("star")),
menuSubItem("RQ 2", tabName = "RQ_2", icon = icon("star")),
menuSubItem("RQ 3", tabName = "RQ_3", icon = icon("star")),
menuSubItem("RQ 4", tabName = "RQ_4", icon = icon("star"))
)
),
## Body
dashboardBody(
tabItems(
# Introduction Tab
tabItem(tabName = "Introduction",
h2("Introduction"),
textOutput("Introduction")
),
# Data Analysis RQ 1 Tab
tabItem(tabName = "RQ_1",
h2("RQ 1: Do outliers matter in terms of distribution?"),
fluidRow(
radioButtons("RQ1_Outlier", label = "Do you want to remove Outliers?",
choices = list("No" = 0, "Yes" = 1),
selected = 0)
),
mainPanel(
plotOutput(outputId = "RQ1"),
helpText("When the rows containing the outliers are removed based on the rosner tests, the distributions of the data have been drastically changed. Accordingly, we should have those pesky outliers gone.")
)
),
# Data Analysis RQ 2 Tab
tabItem(tabName = "RQ_2",
h2("RQ 2: Are there seasonalities from 2011-2019?"),
fluidRow(
selectInput("RQ2_Selection", label = "Select a variable",
choices = list("Food" = 1,
"Food.Pounds" = 2, "Clothing" = 3,
"Diapers" = 4,
"Hygiene.Kits" = 5), selected = 1)
),
mainPanel(
plotOutput(outputId = "RQ2"),
helpText("In general, between 2011 to 2019, Sum of the amount of resources tend to peak for May and June, then decline after summer and rise again during winter. So time series of the resource amount typically show increasing pattern from February through May, declining pattern from July to september and increasing pattern again from September to January.")
)
),
# Data Analysis RQ 3 Tab
tabItem(tabName = "RQ_3",
h2("RQ 3: Are there differences between seasonalities from 2000-2010 and seasonalities from 2011-2019?"),
fluidRow(
selectInput("RQ3_Selection", label = "Select a variable",
choices = list("Food" = 1,
"Food.Pounds" = 2, "Clothing" = 3,
"Diapers" = 4,
"Hygiene.Kits" = 5), selected = 1)
),
mainPanel(
plotOutput(outputId = "RQ3"),
helpText("In general, between 2000 to 2010, sum of the amount of resources tended to peak for July and then decline after summer. So time series of the resource amount typically showed increasing pattern from January through July and declining pattern from July to December.")
)
),
# Data Analysis RQ 4 Tab
tabItem(tabName = "RQ_4",
h2("RQ 4: Do outliers matter in terms of correlation? (the coding takes about 10 seconds)"),
fluidRow(
radioButtons("RQ4_Outlier", label = "Do you want to remove Outliers?",
choices = list("No" = 0, "Yes" = 1),
selected = 0)
),
mainPanel(
plotOutput(outputId = "RQ4"),
helpText("there is statistically significant relationship between 1) Clothing and Food, 2) Diapers and Food, 3) Hygiene.Kits and Bus, 4) Hygiene.Kits and Food, 5) Hygiene.Kits and Diapers, and 6) Clothing and Food.pounds. The outliers affect correlations and distributions significantly.")
)
)
)
)
)
server = function(input, output) {
# Introduction
output$Introduction <- renderText({
paste(Int1)
})
# Data Analysis - RQ 1
output$RQ1 <- renderPlot({
boxplot1(input$RQ1_Outlier)
})
# Data Analysis - RQ 2
output$RQ2 <- renderPlot({
season2(input$RQ2_Selection)
})
# Data Analysis - RQ 3
output$RQ3 <- renderPlot({
season1(input$RQ3_Selection)
})
# Data Analysis - RQ 4
output$RQ4 <- renderPlot({
corr1(input$RQ4_Outlier)
})
}
shinyApp(ui = ui, server = server)
library(shinydashboard)
library(shiny)
library(rsconnect)
library(tidyverse)
library(dplyr)
library(caret)
library(ggplot2)
library(grDevices)
library(EnvStats)
library(forecast)
library(timetk)
library(sweep)
library(GGally)
library(tidyquant)
Int1 = c("The Urban Ministries of Durham (UMD) Project aims for connecting with the community to diminish homelessness and fighting poverty through providing food, shelter and a future to neighbors with special needs (UMD, 2019). Through exploring some hidden patterns of the data using data science analytics, this paper will suggest what evidence social workers can glean from this data and help them better understand their clients and services.")
# Data Cleaning
## Import the data
rawdata <- read.table(file = './data/UMD_Services_Provided_20190719.txt', sep = '\t', fill = TRUE, header = TRUE)
## Rename the variables
data <- rawdata %>%
rename(ClientID = Client.File.Number, Bus = Bus.Tickets..Number.of., Note = Notes.of.Service,
Food = Food.Provided.for, Clothing = Clothing.Items) %>%
select(Date, ClientID, Bus, Food, Food.Pounds, Clothing, Diapers, School.Kits, Hygiene.Kits,
Referrals, Note, Financial.Support)
## Filtering
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
data = data %>%
filter(Date >= "1983-01-01" & Date <= "2019-10-01")
# Roster tests and removing outliers
## rosnerTest(data$Bus, k = 10, warn = F)
data1 <- data[-which(data$Bus >= 7),]
## rosnerTest(data$Food, k = 10, warn = F)
data2 <- data1[-which(data1$Food >= 11),]
## rosnerTest(data$Food.Pounds, k = 5, warn = F)
data3 <- data2[-which(data2$Food.Pounds >= 200),]
## rosnerTest(data$Clothing, k = 100, warn = F)
data4 <- data3[-which(data3$Clothing >= 36),]
# rosnerTest(data$Diapers, k = 5, warn = F)
data5 <- data4[-which(data4$Diapers >= 36),]
# rosnerTest(data$Hygiene.Kits, k = 10, warn = F)
data6 <- data5[-which(data5$Hygiene.Kits >= 3),]
# RQ1: Boxplot function
boxplot1 = function(outlier) {
if (outlier == 0) {
boxplot(data$Bus, data$Food, data$Food.Pounds, data$Cloth, data$Diapers, data$School.Kits,
data$Hygiene.Kits,
main = "Multiple boxplots of the UMD Raw Data",
xlab = "Service Provided", ylab = "Value",
names = c("Bus", "Food", "Food.lb", "Cloth", "Diapers", "Sch.Kits", "Hyg.Kits"),
col = "cyan", border = "Blue", outcol = "red", outcex = 1.5)
}
else if (outlier == 1) {
boxplot(data6$Bus, data6$Food, data6$Food.Pounds, data6$Cloth, data6$Diapers, data6$School.Kits,
data6$Hygiene.Kits, main = "Multiple boxplots: After removing the
outliers", xlab = "Service Provided", ylab = "Value",
names = c("Bus", "Food", "Food.lb", "Cloth", "Diapers", "Sch.Kits", "Hyg.Kits"),
col = "cyan", border = "Blue")
}
}
# RQ2-3: Seasonality function
season2 = function(variable) {
if (variable == 1) {
RQ2_data = data6 %>%
select(Date, Food) %>%
filter(Date >= "2011-01-01" & Date <= "2019-10-01") %>%
drop_na() %>%
separate(Date, sep = "-", into = c("Year", "Month", "Day"))%>%
group_by(Year, Month) %>%
summarise(sum = sum(Food))
ggplot(RQ2_data, aes(x = Month, y = sum, group = Year)) +
geom_area(aes(fill = Year), position = "stack")
}
else if (variable == 2) {
RQ2_data = data6 %>%
select(Date, Food.Pounds) %>%
filter(Date >= "2011-01-01" & Date <= "2019-10-01") %>%
drop_na() %>%
separate(Date, sep = "-", into = c("Year", "Month", "Day"))%>%
group_by(Year, Month) %>%
summarise(sum = sum(Food.Pounds))
ggplot(RQ2_data, aes(x = Month, y = sum, group = Year)) +
geom_area(aes(fill = Year), position = "stack")
}
else if (variable == 3) {
RQ2_data = data6 %>%
select(Date, Clothing) %>%
filter(Date >= "2011-01-01" & Date <= "2019-10-01") %>%
drop_na() %>%
separate(Date, sep = "-", into = c("Year", "Month", "Day"))%>%
group_by(Year, Month) %>%
summarise(sum = sum(Clothing))
ggplot(RQ2_data, aes(x = Month, y = sum, group = Year)) +
geom_area(aes(fill = Year), position = "stack")
}
else if (variable == 4) {
RQ2_data = data6 %>%
select(Date, Diapers) %>%
filter(Date >= "2011-01-01" & Date <= "2019-10-01") %>%
drop_na() %>%
separate(Date, sep = "-", into = c("Year", "Month", "Day"))%>%
group_by(Year, Month) %>%
summarise(sum = sum(Diapers))
ggplot(RQ2_data, aes(x = Month, y = sum, group = Year)) +
geom_area(aes(fill = Year), position = "stack")
}
else if (variable == 5) {
RQ2_data = data6 %>%
select(Date, Hygiene.Kits) %>%
filter(Date >= "2011-01-01" & Date <= "2019-10-01") %>%
drop_na() %>%
separate(Date, sep = "-", into = c("Year", "Month", "Day"))%>%
group_by(Year, Month) %>%
summarise(sum = sum(Hygiene.Kits))
ggplot(RQ2_data, aes(x = Month, y = sum, group = Year)) +
geom_area(aes(fill = Year), position = "stack")
}
}
season1 = function(variable) {
if (variable == 1) {
RQ3_data = data6 %>%
select(Date, Food) %>%
filter(Date >= "2000-01-01" & Date <= "2010-12-31") %>%
drop_na() %>%
separate(Date, sep = "-", into = c("Year", "Month", "Day"))%>%
group_by(Year, Month) %>%
summarise(sum = sum(Food))
ggplot(RQ3_data, aes(x = Month, y = sum, group = Year)) +
geom_area(aes(fill = Year), position = "stack")
}
else if (variable == 2) {
RQ3_data = data6 %>%
select(Date, Food.Pounds) %>%
filter(Date >= "2000-01-01" & Date <= "2010-12-31") %>%
drop_na() %>%
separate(Date, sep = "-", into = c("Year", "Month", "Day"))%>%
group_by(Year, Month) %>%
summarise(sum = sum(Food.Pounds))
ggplot(RQ3_data, aes(x = Month, y = sum, group = Year)) +
geom_area(aes(fill = Year), position = "stack")
}
else if (variable == 3) {
RQ3_data = data6 %>%
select(Date, Clothing) %>%
filter(Date >= "2000-01-01" & Date <= "2010-12-31") %>%
drop_na() %>%
separate(Date, sep = "-", into = c("Year", "Month", "Day"))%>%
group_by(Year, Month) %>%
summarise(sum = sum(Clothing))
ggplot(RQ3_data, aes(x = Month, y = sum, group = Year)) +
geom_area(aes(fill = Year), position = "stack")
}
else if (variable == 4) {
RQ3_data = data6 %>%
select(Date, Diapers) %>%
filter(Date >= "2000-01-01" & Date <= "2010-12-31") %>%
drop_na() %>%
separate(Date, sep = "-", into = c("Year", "Month", "Day"))%>%
group_by(Year, Month) %>%
summarise(sum = sum(Diapers))
ggplot(RQ3_data, aes(x = Month, y = sum, group = Year)) +
geom_area(aes(fill = Year), position = "stack")
}
else if (variable == 5) {
RQ3_data = data6 %>%
select(Date, Hygiene.Kits) %>%
filter(Date >= "2000-01-01" & Date <= "2010-12-31") %>%
drop_na() %>%
separate(Date, sep = "-", into = c("Year", "Month", "Day"))%>%
group_by(Year, Month) %>%
summarise(sum = sum(Hygiene.Kits))
ggplot(RQ3_data, aes(x = Month, y = sum, group = Year)) +
geom_area(aes(fill = Year), position = "stack")
}
}
# RQ4: GGally data transformation and function
vars = c("Bus", "Food", "Food.Pounds", "Clothing", "Diapers", "School.Kits", "Hygiene.Kits")
data_ <- data[,c(vars)]
data6_ <- data6[,c(vars)]
corr1 = function(outlier) {
if (outlier == 0) {
ggpairs(data_, progress = FALSE)
}
else if (outlier == 1) {
ggpairs(data6_, progress = FALSE)
}
}
source("helper_functions.R")
# Define UI for app that draws a histogram ----
ui = dashboardPage(
# Title
dashboardHeader(title = "UMA Data Visualization Dashboard",
titleWidth = 270
),
# Sidebar
dashboardSidebar(
sidebarMenu(
menuItem("Introduction", tabName = "Introduction", icon = icon("home")),
menuSubItem("RQ 1", tabName = "RQ_1", icon = icon("star")),
menuSubItem("RQ 2", tabName = "RQ_2", icon = icon("star")),
menuSubItem("RQ 3", tabName = "RQ_3", icon = icon("star")),
menuSubItem("RQ 4", tabName = "RQ_4", icon = icon("star"))
)
),
## Body
dashboardBody(
tabItems(
# Introduction Tab
tabItem(tabName = "Introduction",
h2("Introduction"),
textOutput("Introduction")
),
# Data Analysis RQ 1 Tab
tabItem(tabName = "RQ_1",
h2("RQ 1: Do outliers matter in terms of distribution?"),
fluidRow(
radioButtons("RQ1_Outlier", label = "Do you want to remove Outliers?",
choices = list("No" = 0, "Yes" = 1),
selected = 0)
),
mainPanel(
plotOutput(outputId = "RQ1"),
helpText("When the rows containing the outliers are removed based on the rosner tests, the distributions of the data have been drastically changed. Accordingly, we should have those pesky outliers gone.")
)
),
# Data Analysis RQ 2 Tab
tabItem(tabName = "RQ_2",
h2("RQ 2: Are there seasonalities from 2011-2019?"),
fluidRow(
selectInput("RQ2_Selection", label = "Select a variable",
choices = list("Food" = 1,
"Food.Pounds" = 2, "Clothing" = 3,
"Diapers" = 4,
"Hygiene.Kits" = 5), selected = 1)
),
mainPanel(
plotOutput(outputId = "RQ2"),
helpText("In general, between 2011 to 2019, Sum of the amount of resources tend to peak for May and June, then decline after summer and rise again during winter. So time series of the resource amount typically show increasing pattern from February through May, declining pattern from July to september and increasing pattern again from September to January.")
)
),
# Data Analysis RQ 3 Tab
tabItem(tabName = "RQ_3",
h2("RQ 3: Are there differences between seasonalities from 2000-2010 and seasonalities from 2011-2019?"),
fluidRow(
selectInput("RQ3_Selection", label = "Select a variable",
choices = list("Food" = 1,
"Food.Pounds" = 2, "Clothing" = 3,
"Diapers" = 4,
"Hygiene.Kits" = 5), selected = 1)
),
mainPanel(
plotOutput(outputId = "RQ3"),
helpText("In general, between 2000 to 2010, sum of the amount of resources tended to peak for July and then decline after summer. So time series of the resource amount typically showed increasing pattern from January through July and declining pattern from July to December.")
)
),
# Data Analysis RQ 4 Tab
tabItem(tabName = "RQ_4",
h2("RQ 4: Do outliers matter in terms of correlation? (the coding takes about 10 seconds)"),
fluidRow(
radioButtons("RQ4_Outlier", label = "Do you want to remove Outliers?",
choices = list("No" = 0, "Yes" = 1),
selected = 0)
),
mainPanel(
plotOutput(outputId = "RQ4"),
helpText("there is statistically significant relationship between 1) Clothing and Food, 2) Diapers and Food, 3) Hygiene.Kits and Bus, 4) Hygiene.Kits and Food, 5) Hygiene.Kits and Diapers, and 6) Clothing and Food.pounds. The outliers affect correlations and distributions significantly.")
)
)
)
)
)
server = function(input, output) {
# Introduction
output$Introduction <- renderText({
paste(Int1)
})
# Data Analysis - RQ 1
output$RQ1 <- renderPlot({
boxplot1(input$RQ1_Outlier)
})
# Data Analysis - RQ 2
output$RQ2 <- renderPlot({
season2(input$RQ2_Selection)
})
# Data Analysis - RQ 3
output$RQ3 <- renderPlot({
season1(input$RQ3_Selection)
})
# Data Analysis - RQ 4
output$RQ4 <- renderPlot({
corr1(input$RQ4_Outlier)
})
}
shinyApp(ui = ui, server = server)

library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.csv('Analysis.csv')
a <- ggplot(data, aes(Entrygrp))
a + geom_bar(aes(fill = timegrp))
educare <- read_csv("educare.csv")
a <- ggplot(data, aes(Entrygrp))
a + geom_bar(aes(fill = plsEng_TenureYr))
a <- ggplot(data, aes(plsEng_TenureYr))
a + geom_bar(aes(fill = plsEng_TenureYr))
data <- read.csv('Analysis.csv')
jpeg("rplot.jpg")
a <- ggplot(data, aes(plsEng_TenureYr))
a + geom_bar(aes(fill = plsEng_TenureYr))
dev.off()
library(tidyverse)
library(dplyr)
library(tidyr)
library(caret)
library(ggplot2)
library(viridis)
library(hrbrthemes)
library(ggthemes)
library(VIM)
library(openxlsx)
library(devtools)
library(tidyverse)
library(ggplot2)
library(multigroup)
library(installr)
library(readr)
library(readxl)
library(haven)
library(GGally)
library(naniar)
library(VIM)
library(mice)
library(statVisual)
library(jtools)
library(interactions)
library(ggplot2)
library(sandwich)
library(rgl)
library(car)
library(scatterplot3d)
library(lattice)
library(ISLR)
library(glmnet)
# Import the Data
data <- read.csv('final_data')
data_demo <- read.csv('final_data_demo')
data <- read.csv('final_data', sep = "\t")
data <- read.csv('final_data', sep = "\t")
data <- read.csv('final_data.csv')
data_demo <- read.csv('final_data_demo.csv')
## Bar Plot
a <- ggplot(data_demo, aes(Gender))
a + geom_bar(aes(fill = Ethnicity))+
labs(title="Bar Plot",
subtitle="Gender and Ethnicity in UMD",
caption="Source: Urban Ministries of Durham",
x="Ethnicity",
y="Frequency")
library(ggplot2)
## Bar Plot
a <- ggplot(data_demo, aes(Gender))
a + geom_bar(aes(fill = Ethnicity)) +
labs(title="Bar Plot",
subtitle="Gender and Ethnicity in UMD",
caption="Source: Urban Ministries of Durham",
x="Ethnicity",
y="Frequency")
# Import the Data
data <- read.csv('final_data.csv')
data_demo <- read.csv('final_data_demo.csv')
library(tidyverse)
library(dplyr)
library(tidyr)
library(caret)
library(ggplot2)
## Bar Plot
a <- ggplot(data_demo, aes(Gender))
a + geom_bar(aes(fill = Ethnicity)) +
labs(title="Bar Plot",
subtitle="Gender and Ethnicity in UMD",
caption="Source: Urban Ministries of Durham",
x="Ethnicity",
y="Frequency")
## Bar Plot (Gender & Race)
a <- ggplot(data_demo, aes(Gender))
a + geom_bar(aes(fill = Race)) +
labs(title="Bar Plot",
subtitle="Gender and Race in UMD",
caption="Source: Urban Ministries of Durham",
x="Race",
y="Frequency")
# Import the Data
data <- read.csv('final_data.csv')
data_demo <- read.csv('final_data_demo.csv')
## Bar Plot (Gender & Race)
a <- ggplot(data_demo, aes(Gender))
a + geom_bar(aes(fill = Race)) +
labs(title="Bar Plot",
subtitle="Gender and Race in UMD",
caption="Source: Urban Ministries of Durham",
x="Race",
y="Frequency")
## Bar Plot (Race & Veteran Status)
a <- ggplot(data_demo, aes('Veteran Status'))
a + geom_bar(aes(fill = Race)) +
labs(title="Bar Plot",
subtitle="Gender and Ethnicity in UMD",
caption="Source: Urban Ministries of Durham",
x="Ethnicity",
y="Frequency")
## Bar Plot (Race & Veteran Status)
a <- ggplot(data_demo, aes(Veteran Status))
a + geom_bar(aes(fill = Race)) +
labs(title="Bar Plot",
subtitle="Gender and Ethnicity in UMD",
caption="Source: Urban Ministries of Durham",
x="Ethnicity",
y="Frequency")
# Import the Data
data <- read.csv('final_data.csv')
data_demo <- read.csv('final_data_demo.csv')
## Bar Plot (Gender & Race)
a <- ggplot(data_demo, aes(Gender))
a + geom_bar(aes(fill = Race)) +
labs(title="Bar Plot",
subtitle="Gender and Race in UMD",
caption="Source: Urban Ministries of Durham",
x="Race",
y="Frequency")
## Bar Plot (Race & Veteran Status)
a <- ggplot(data_demo, aes(Veteran))
a + geom_bar(aes(fill = Race)) +
labs(title="Bar Plot",
subtitle="Gender and Ethnicity in UMD",
caption="Source: Urban Ministries of Durham",
x="Ethnicity",
y="Frequency")
## Bar Plot (Gender & Race)
a <- ggplot(data_demo, aes(Gender))
a + geom_bar(aes(fill = Race)) +
labs(title="Bar Plot",
subtitle="Gender and Race in UMD",
caption="Source: Urban Ministries of Durham",
x="Race",
y="Frequency")
## Bar Plot (Race & Veteran Status)
a <- ggplot(data_demo, aes(Veteran))
a + geom_bar(aes(fill = Race)) +
labs(title="Bar Plot",
subtitle="Veteran and Race in UMD",
caption="Source: Urban Ministries of Durham",
x="Veteran",
y="Frequency")
# Import the Data
data <- read.csv('final_data.csv')
data_demo <- read.csv('final_data_demo.csv')
## Bar Plot (Race & Veteran Status)
b <- ggplot(data_demo, aes(Veteran))
b + geom_bar(aes(fill = Race)) +
labs(title="Bar Plot",
subtitle="Veteran and Race in UMD",
caption="Source: Urban Ministries of Durham",
x="Veteran",
y="Frequency")
## Box Plot (Time & (Race X Gender))
c <- ggplot(data, aes(Race, Time))
c + geom_boxplot(aes(colour = Gender))
## Box Plot (Income & (Race X Gender))
c <- ggplot(data, aes(Race, Time))
c + geom_boxplot(aes(colour = Gender))
## Box Plot (Income & (Race X Gender))
d <- ggplot(data, aes(Race, Income))
d + geom_boxplot(aes(colour = Gender))
## Box Plot (Income & (Race X Gender))
d <- ggplot(data, aes(Race, Income_Month)
d + geom_boxplot(aes(colour = Gender))
d <- ggplot(data, aes(Race, Income_Month)
d + geom_boxplot(aes(colour = Gender))
## Box Plot (Income & (Race X Gender))
d <- ggplot(data, aes(Race, Income_Monthly)
d + geom_boxplot(aes(colour = Gender))
## Box Plot (Time & (Race X Gender))
c <- ggplot(data, aes(Race, Time))
c + geom_boxplot(aes(colour = Gender))
## Box Plot (Time & (Race X Gender))
d <- ggplot(data, aes(Race, Income_Monthly))
d + geom_boxplot(aes(colour = Gender))
## Density Plot ()
e <- ggplot(data, aes(Time, fill = Gender, colour = Gender))
e + geom_density(alpha = 0.1)
e <- ggplot(data, aes(Time, fill = Gender, colour = Gender))
e + geom_density(alpha = 0.1) +
labs(title="Density Plot",
subtitle="Gender and Time in UMD",
caption="Source: Urban Ministries of Durham",
x="Time",
y="Density")
## Box Plot (Monthly income & (Race X Gender))
d <- ggplot(data, aes(Race, Income_Monthly))
d + geom_boxplot(aes(colour = Gender)) +
labs(title="Bar Plot",
subtitle="Gender and Monthly Income",
caption="Source: Urban Ministries of Durham",
x="Race",
y="Frequency")
## Box Plot (Monthly income & (Race X Gender))
d <- ggplot(data, aes(Race, Income_Monthly))
d + geom_boxplot(aes(colour = Gender)) +
labs(title="Bar Plot",
subtitle="(Race X Gender) and Monthly Income",
caption="Source: Urban Ministries of Durham",
x="Race",
y="Frequency")
## Box Plot (Time & (Race X Gender))
c <- ggplot(data, aes(Race, Time))
c + geom_boxplot(aes(colour = Gender)) +
labs(title="Box Plot",
subtitle="(Race X Gender) and Time in UMD",
caption="Source: Urban Ministries of Durham",
x="Race",
y="Frequency")
library(GGally)
## Scatter Plot (Time & Income & Age)
vars = c("Time", "Income", "Age")
final_data2 <- final_data[,c(vars)]
drop_na(final_data2)
ggpairs(final_data2, progress = FALSE,
upper = list(continuous = "cor"),
lower = list(continuous = "density"))
## Scatter Plot (Time & Income & Age)
vars = c("Time", "Income", "Age")
data2 <- data[,c(vars)]
drop_na(data2)
ggpairs(data2, progress = FALSE,
upper = list(continuous = "cor"),
lower = list(continuous = "density"))
vars = c("Time", "Income", "Age")
data2 <- data[,c(vars)]
## Scatter Plot (Time & Income & Age)
vars = c("Time", "Income_Monthly", "Age")
data2 <- data[,c(vars)]
drop_na(data2)
ggpairs(data2, progress = FALSE,
upper = list(continuous = "cor"),
lower = list(continuous = "density"))
vars1 = c("Time", "Income_Monthly", "Age", "Gender")
data3 <- data[,c(vars1)]
drop_na(data3)
ggpairs(data3, columns=1:3, ggplot2::aes(colour=Gender),
upper = list(continuous = "cor", combo = "box_no_facet"),
lower = list(continuous = "density", combo = "dot_no_facet"),
diag = list(continuous = "densityDiag"))
## Scatter Plot and Density Plot (Gender X (Time & Income & Age))
vars1 = c("Time", "Income_Monthly", "Age", "Gender")
data3 <- data[,c(vars1)]
drop_na(data3)
ggpairs(data3, ggplot2::aes(colour=Gender),
upper = list(continuous = "cor", combo = "box_no_facet"),
lower = list(continuous = "density", combo = "dot_no_facet"),
diag = list(continuous = "densityDiag"))
ggpairs(data3, ggplot2::aes(colour=Gender),
upper = list(continuous = "density", combo = "dot_no_facet"),
lower = list(continuous = "cor", combo = "box_no_facet"),
diag = list(continuous = "densityDiag"))
library(ISLR)
library(glmnet)
library(dplyr)
library(tidyr)
Variables = c("Age","Gender","Race","Ethnicity","Veteran","Income_Monthly","Disability","HealthInsurance","DomesticViolence","Time")
Variables = c("Age","Gender","Race","Ethnicity","Veteran","Income_Monthly","Disability","HealthInsurance","DomesticViolence","Time")
x = model.matrix(Time~.^2, Variables_)[,-1]
y = Variables_ %>% select(Time) %>% unlist() %>% as.numeric()
train = Variables_ %>% sample_frac(0.5)
test = Variables_ %>% setdiff(train)
x_train = model.matrix(Time~., train)[,-1]
x_test = model.matrix(Time~., test)[,-1]
y_train = train %>% select(Time) %>% unlist() %>% as.numeric()
y_test = test %>% select(Time) %>% unlist() %>% as.numeric()
Variables = c("Age","Gender","Race","Ethnicity","Veteran","Income_Monthly","Disability","HealthInsurance","DomesticViolence","Time")
x = model.matrix(Time~.^2, Variables)[,-1]
y = Variables %>% select(Time) %>% unlist() %>% as.numeric()
train = Variables %>% sample_frac(0.5)
test = Variables %>% setdiff(train)
x_train = model.matrix(Time~., train)[,-1]
x_test = model.matrix(Time~., test)[,-1]
y_train = train %>% select(Time) %>% unlist() %>% as.numeric()
y_test = test %>% select(Time) %>% unlist() %>% as.numeric()
Variables = c("Age","Gender","Race","Ethnicity","Veteran","Income_Monthly","Disability","HealthInsurance","DomesticViolence","Time")
x = model.matrix(Time~.^2, Variables)[,-1]
Variables = c("Age","Gender","Race","Ethnicity","Veteran","Income_Monthly","Disability","HealthInsurance","DomesticViolence","Time")
Variables_ <- data[,c(Variables)]
x = model.matrix(Time~.^2, Variables_)[,-1]
y = Variables_ %>% select(Time) %>% unlist() %>% as.numeric()
train = Variables_ %>% sample_frac(0.5)
test = Variables_ %>% setdiff(train)
x_train = model.matrix(Time~., train)[,-1]
x_test = model.matrix(Time~., test)[,-1]
y_train = train %>% select(Time) %>% unlist() %>% as.numeric()
y_test = test %>% select(Time) %>% unlist() %>% as.numeric()
### Fit LASSO model on training data and evaluate the model (lamda) on testing data
lasso_mod = glmnet(x_train, y_train, alpha = 1) # Fit lasso model on training data
plot(lasso_mod)    # Draw plot of coefficients
cv.out = cv.glmnet(x_train, y_train, alpha = 1) # Fit lasso model on training data
plot(cv.out) # Draw plot of training MSE as a function of lambda
bestlam = cv.out$lambda.min # Select lamda that minimizes training MSE
lasso_pred = predict(lasso_mod, s = bestlam, newx = x_test) # Use best lambda to predict test data
mean((lasso_pred - y_test)^2) # Calculate test MSE
### LASSO Outcomes
out = glmnet(x, y, alpha = 1) # Fit lasso model on full dataset
lasso_coef = predict(out, type = "coefficients", s = bestlam)[1:40,] # Display coefficients using lambda chosen by CV
lasso_coef
lasso_coef[lasso_coef != 0] # Display only non-zero coefficients
library(jtools)
library(interactions)
interaction1 <- lm(Time ~ Age * Gender , data = data)
interaction1 <- lm(Time ~ Age * Gender , data = data)
interact_plot(interaction1, pred = Age, modx = Gender)
interaction1 <- lm(Time ~ Age * Race , data = data)
interact_plot(interaction1, pred = Age, modx = Race)
interaction1 <- lm(Time ~ Age * Income_Monthly , data = data)
interact_plot(interaction1, pred = Age, modx = Income_Monthly)
interaction1 <- lm(Time ~ Age * HealthInsurance , data = data)
interact_plot(interaction1, pred = Age, modx = HealthInsurance)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
